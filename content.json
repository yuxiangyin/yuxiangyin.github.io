[{"title":"用 Hexo 静态网页生成器编写个人网站","date":"2017-04-02T12:37:40.000Z","path":"2017/04/02/用 Hexo 静态网页生成器编写个人网站/","text":"为什么 Hexo 而不是 pelican Hexo 安装Hexo 建站流程SSH 配置Hexo 主题 - NextNext 个性化及插件配置主题颜色转载自修改Hexo的Next主题 123456789101112131415161718// Colors// colors for use across theme.// -------------------------------------------------- $whitesmoke = #f5f5f5 $gainsboro = #eee //这个是边栏头像外框的颜色， $gray-lighter = #ddd //文章中插入图片边框颜色 $grey-light = #ccc //文章之间分割线、下划线颜色 $grey = #bbb //页面选中圆点颜色 $grey-dark = #999 $grey-dim = #666 //侧边栏目录字体颜色 $black-light = #555 //修改文章字体颜色 $black-dim = #333 $black-deep = #495a80 //修改主题的颜色，这里我已经改成老蓝色了。 $red = #ff2a2a $blue-bright = #87daff $blue = #0684bd $blue-deep = #262a30 $orange = #F39D01 //浏览文章时，目录选中的颜色 增加文章阴影框转载自为next主题的主页文章添加阴影效果 打开themes/next/source/css/_schemes/Mist/_posts-expanded.styl文件找到类.posts-expand下面的.post 1234567.posts-expand &#123; ... .post &#123; margin-top: 120px; &#125; ... &#125; 修改成 1234567891011.posts-expand &#123; ... .post &#123; margin-top: 60px; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5); &#125; ... &#125; 取消图片阴影框1$gray-lighter = #ddd //文章中插入图片边框颜色 文章阅读量插件增加本站访客量及访问量不蒜子 图标的修改去掉版权12# Footer `powered-by` and `theme-info` copyrightcopyright: false 加入音乐播放器1&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;http://music.163.com/outchain/player?type=2&amp;id=28285910&amp;auto=1&amp;height=66&quot;&gt;&lt;/iframe&gt; 效果如下","tags":[]},{"title":"如何拟合一个平坦的峰 How to fit a flat peak","date":"2017-04-01T15:58:40.000Z","path":"2017/04/01/如何拟合一个平坦的峰 How to fit a flat peak/","text":"实验中我们有时候会需要拟合一个平直的峰，如下图所示 我们需要选择一个合适的函数来拟合数据，从而得到这个峰的 位置 position ($p$) 宽度 width ($w$) 高度 height ($h$) 上升和下降的陡峭度 steepness ($\\sigma$) 我们可以选择误差函数（Error function）来拟合它$$f(x) = \\frac{1}{2} h\\times {\\rm erf}(\\frac{x+w-p}{\\sqrt{2}\\sigma})+\\frac{1}{2} h\\times {\\rm erf}(\\frac{-x+w+p}{\\sqrt{2}\\sigma})$$ 拟合效果如下图所示","tags":[]},{"title":"如何将点阵图(pixel image)转化成矢量图(vector image)","date":"2017-04-01T15:55:50.000Z","path":"2017/04/01/如何将点阵图(pixel image)转化成矢量图(vector image)/","text":"矢量图和点阵图上面两张图，左边是矢量图，右边是点阵图。两者区别就是，矢量图可以无限放大而不失清晰度，点阵图放大之后很模糊呈现像素的模样。放大之后如下图所示： 在如今这个看脸的时代，高品质的图片绝对是吸引读者的一大利器。所以在文章中插入的图片最好必须是矢量图。矢量图一般用 Adobe Illustrator 画，但是很多时候直接能在网上找到现成的图的时候都懒得画，但是网上的图基本上都是点阵图，所以将点阵图转化成矢量图的方法绝对是一大利器！ 1. 用AI直接转换先将图片直接导入AI，然后选择图片，点击菜单栏中 Window &gt; Image Trace, 此时 Image trace 的窗口会打开,并点开 Advanced 菜单，如下图所示 调节各项参数直到满意，然后点击上方的 Expand 进行矢量化即可 但是用AI进行转化对于图形比较规则的情形比较有效，如果图片里面有比较奇怪的形状，譬如上图中的 $e_r$，细节就不会完全回复。这时，我们需要增加一些人工智能的方法进行矢量化。当然我们不需要自己编写代码，因为Web端已经有人准备好了工具。 2. 在线网站转换Web端很多人开发了使用人工智能方法转化的工具，这里推荐一个效果比较好的 VectorMagic.com，转换的效果与AI相对比细节上好很多。但是仔细看的话少数图形，如某些字母还是不完美，这个时候可以将图片导入AI中擦除掉不满意的地方然后用公式编辑器补上擦除的字母即可。VectorMagic.com 并不是完全免费的，转换后可以免费下载EPS格式2次，之后即需要付费，还特别贵。","tags":[]},{"title":"我的科研软件","date":"2017-04-01T10:50:39.000Z","path":"2017/04/01/我的科研软件/","text":"2D modeling PowerPoint (Basic) Adobe Illustrator (Good) AutoCad (Industry design, i.e. Photo mask design or EBL pattern design, nanoscale) 3D modeling PowerPoint (Basic, not handy) SketchUp Make (FREE, Easy to use, good but not very accurate, no rendering, no nanoscale) Blender (FREE, good and rendering possible, hard to use, no nanoscale) AutoCad (FREE, good and nanoscale, hard to use, no rendering) 3Ds MAX (Powerful and rendering, hard to use, no MAC version) SpaceClaim (easy to use, compatible to ANSYS, no nanoscale, no MAC version) Simulation tools (Thermal electric mechanical fluid) COMSOL MULTIPHYSICS (easy to use, nanoscale, 3D modeling not handy, MAC license hard to find) ANSYS (easy to use, nanoscale?, internal 3D modeling is handy but not nanoscale, no MAC version) Simulation tools (Micromagnetics) OOMMF (open source and free, writing code needed, good extendability) GPMagnet (GPU based, easy to use, poor extenability, not free) NUNAX (GPU based, easy to use, free) Mathematical computation Mathematica (Good at analytical calculation) Matlab (Good at numerical calculation and image processing, fast) Pycharm (Python programming) Text input Word (Easy to use, hard to typeset) Evernote (notes collections, iOS, Web, Mac) Latex language (Pro typeset language, good for writing paper) WinEdit in Windows Texpad in MAC Markdown language (Lite typeset language, good for making notes) WebApp: CMD Markdown (good, synchronized with Evernote), 马克飞象, Stackedit, Madoko (Latex output) CMD Markdown, 马克飞象, Mou in MAC Matcha in iOS Have fun!","tags":[]}]